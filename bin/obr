#!/usr/bin/env python3
# This file is placed in the Public Domain.
# pylint: disable=C0115,C0116,C0415,R0903,R0912,R0915,W0105,W0611,W0718,E0402


"main"


import os
import readline
import sys
import termios
import time


sys.path.insert(0, os.getcwd())


from obr.client  import Client, Event
from obr.command import command, parse, scan
from obr         import errors, forever, later


from obx.persist import Config


Config.name = "obr"
Config.wdr  = os.path.expanduser(f"~/.{Config.name}")


cfg = Config()


class CLI(Client):


    def dosay(self, channel, txt):
        self.raw(txt)

    def raw(self, txt):
        print(txt)


class Console(CLI):

    def announce(self, txt):
        self.raw(txt)


    def callback(self, evt):
        CLI.callback(self, evt)
        evt.wait()

    def poll(self):
        evt = Event()
        evt.txt = input("> ")
        evt.type = "command"
        return evt


def banner():
    tme = time.ctime(time.time()).replace("  ", " ")
    print(f"{cfg.name.upper()} since {tme}")


def wrap(func):
    old = None
    try:
        old = termios.tcgetattr(sys.stdin.fileno())
    except termios.error:
        pass
    try:
        func()
    except (KeyboardInterrupt, EOFError):
        print("")
    except Exception as ex:
        later(ex)
    finally:
        if old:
            termios.tcsetattr(sys.stdin.fileno(), termios.TCSADRAIN, old)


def main():
    parse(cfg, " ".join(sys.argv[1:]))
    if "v" in cfg.opts:
        banner()
    if os.path.exists("mods"):
        from mods import face
        face.irc.output = print
        for mod, thr in scan(face, init="i" in cfg.opts):
            if "w" in cfg.opts and thr:
                thr.join()
    if "c" in cfg.opts:
        csl = Console()
        csl.start()
        forever()
    else:
        evt = Event()
        evt.type = "command"
        evt.txt = cfg.otxt
        csl = CLI()
        command(csl, evt)
        evt.wait()


if __name__ == "__main__":
    wrap(main)
    for text in errors():
        print(text)
